buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '6.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.4.0"
        classpath group: 'com.modrinth.minotaur', name: 'Minotaur', version: '2+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: "com.matthewprenger.cursegradle"
apply plugin: 'maven-publish'
apply plugin: 'com.modrinth.minotaur'

group = 'uk.co.hexeption'
version = '1.20.1-1.0.0'
def env = System.getenv()
if (env.GITHUB_RUN_NUMBER) {
    version = version + "+" + "${env.GITHUB_RUN_NUMBER}"
}

java {
    archivesBaseName = 'AEInfinityBooster'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    mappings channel: 'official', version: '1.20.1'

    runs {
        client {
            workingDirectory project.file('run/client')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                aeinfinitybooster {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run/server')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                aeinfinitybooster {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run/data')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'aeinfinitybooster', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                aeinfinitybooster {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "AEInfinityBooster.refmap.json"

    config "AEInfinityBooster.mixins.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name "Modmaven"
        url "https://modmaven.dev/"
        content {
            includeGroup 'appeng'
        }
    }
    maven {
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of the maven that hosts JEI files since January 2023
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.1.43'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    runtimeOnly fg.deobf("mezz.jei:jei-1.20.1-forge:15.0.0.12")
    compileOnly fg.deobf("appeng:appliedenergistics2-forge:15.0.9-beta")
    runtimeOnly fg.deobf("appeng:appliedenergistics2-forge:15.0.9-beta")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "aeinfinitybooster",
                //"Specification-Vendor": "aeinfinitybooster authors",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                //"Implementation-Vendor": "aeinfinitybooster authors",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "AEInfinityBooster.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

mixin {
    add sourceSets.main, "AEInfinityBooster.refmap.json"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    archiveClassifier = 'deobf'
}

artifacts {
    archives jar
    archives sourcesJar
    archives deobfJar
}
